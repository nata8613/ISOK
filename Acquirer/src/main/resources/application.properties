# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.jpa.show-sql = true
server.port=8883
server.address = 192.168.1.16
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: bankapassword
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: acquirer
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update


# Naming strategy
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.hibernate.naming.physical-strategy= com.Acquirer.Acquirer.PhysicalNamingStrategyImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/acquirerdb?useSSL=false&createDatabaseIfNotExist=true
# Username and password
spring.datasource.username = root
spring.datasource.password = admin123

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

